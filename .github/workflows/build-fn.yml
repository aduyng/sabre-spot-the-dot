name: "99: [FN] Build"

on:
  workflow_call:
    inputs:
      VERSION:
        type: string
        required: true
      generateSourceMaps:
        type: boolean
        default: false
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set env variables
      run: |
        echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-8)" >> $GITHUB_ENV
        echo "REACT_APP_BUILD_NUMBER=$GITHUB_SHA_SHORT" >> $GITHUB_ENV
        echo "NOW=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

    - name: Use Node.js 16.x
      uses: actions/setup-node@v1
      with:
        node-version: 16.x

    - name: cache npm
      id: cache-npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: install dependencies
      if: steps.cache-primes.outputs.cache-hit != 'true'
      run: |
        npm i
        npm --prefix api i
        npm --prefix web i
        npm --prefix functions i
        npm --prefix e2e i
        npm --prefix aig-ftp-sync i
        npm --prefix chrome-extension i

    - name: build
      run: |
        npm run functions:build
        npm --prefix web run build
        mkdir -p output
        mv web/build output/web
        mv functions output/functions
      env:
        NODE_ENV: "production"
        DISABLE_ESLINT_PLUGIN: true
        REACT_APP_VERSION: ${{inputs.VERSION}}
        NODE_OPTIONS: "--max-old-space-size=8192"
        GENERATE_SOURCEMAP: ${{inputs.generateSourceMaps}}

    - name: create build info
      id: create-json
      uses: jsdaniell/create-json@1.1.2
      with:
        name: "build.json"
        json: "{\"version\": \"${{inputs.VERSION}}\",\"buildNumber\": \"${{env.GITHUB_SHA_SHORT}}\",\"buildBranch\": \"${{github.ref_name}}\",\"runId\": \"${{github.run_id}}\",\"buildSHA\": \"${{github.sha}}\",\"buildDate\": \"${{env.NOW}}\"}"
        dir: 'output/web/'

    - name: copy build.json to functions
      run: cp output/web/build.json output/functions

    - name: Create tar.gz file
      run: |
        tar -czvf ${{inputs.VERSION}}.tar.gz output

    - name: upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{inputs.VERSION}}.tar.gz
        path: ${{inputs.VERSION}}.tar.gz
        retention-days: 5
